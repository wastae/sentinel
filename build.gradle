/*
 * Copyright Â© 2018 Frederik Mikkelsen <fred at frederikam.com>
 * FredBoat microservice for handling JDA and Lavalink over RabbitMQ.
 *
 * This program is licensed under GNU AGPLv3 under no warranty.
 */

buildscript {
    ext {
        gradleGitVersion = '2.1.0'
        kotlin_version = '1.4.32'
        bootVersion = '2.0.1.RELEASE'
        aptVersion = '0.17'
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$bootVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "net.ltgt.gradle:gradle-apt-plugin:${aptVersion}"
    }
}

group 'com.fredboat'
version '0.1'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: "kotlin-spring"
apply plugin: "maven"
apply plugin: "maven-publish"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileJava.dependsOn 'clean'
compileJava.options.encoding = 'UTF-8'
compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        jcenter()
        maven { url 'https://dl.bintray.com/palantir/releases' }
    }
}

ext {
    serverSocketIOVersion = '1.7.19'
    jdaVersion = "c2d16c83e2"
    reactorVersion = "3.1.1.RELEASE"
    gsonVersion = '2.8.2'
    jacksonKotlinVersion = "2.13.1"
    logbackVersion = "1.2.3"
    sentryVersion = '1.7.5'
    prometheusClientVersion = "0.4.0"
    reactorRabbitVersion = "1.2.0.RELEASE"
    coroutinesVersion = "1.3.0-RC"
    jsonVersion = "20180130"
    snakeYamlVersion = "1.27"
    reflectionsVersion = "0.9.11"

    //testing deps
    junitVersion                = '5.1.0'
    apiGuardianVersion          = '1.0.0'
    //dockerComposeRuleVersion    = '0.33.0'
    //mockitoVersion              = '2.+'
}

wrapper {
    gradleVersion = "4.8.1"
    //noinspection UnnecessaryQualifiedReference
    distributionType = Wrapper.DistributionType.ALL
}

//create a simple version file that we will be reading to create appropriate docker tags
void versionTxt() {
    new File("$projectDir/VERSION.txt").text = "$rootProject.version\n"
}

versionTxt()

//publishToMavenLocal.dependsOn jar

/*
// called by jitpack
task install {
    dependsOn build
    dependsOn publishToMavenLocal
    doLast {
        println 'Version: ' + version
    }
}*/
