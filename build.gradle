/*
 * Copyright Â© 2018 Frederik Mikkelsen <fred at frederikam.com>
 * FredBoat microservice for handling JDA and Lavalink over RabbitMQ.
 *
 * This program is licensed under GNU AGPLv3 under no warranty.
 */

buildscript {
    ext {
        depCheckerVersion = "0.38.0"
        gradleGitVersion = "2.3.1"
        kotlin_version = "1.4.32"
        bootVersion = "2.4.5"
        aptVersion = "0.21"
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath "com.github.ben-manes:gradle-versions-plugin:${depCheckerVersion}"
        classpath "com.gorylenko.gradle-git-properties:gradle-git-properties:${gradleGitVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$bootVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "net.ltgt.gradle:gradle-apt-plugin:${aptVersion}"
    }
}

group 'com.fredboat'
version '0.1'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: "kotlin-spring"
apply plugin: "maven"
apply plugin: "maven-publish"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileJava.dependsOn 'clean'
compileJava.options.encoding = 'UTF-8'
compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://dl.bintray.com/palantir/releases' }
        maven { url 'https://jitpack.io' }
    }
}

ext {
    //jdaVersion = "4.2.0_211"
    amqpVersion = "2.0.4.RELEASE"
    gsonVersion = "2.8.6"
    jacksonKotlinVersion = "2.12.3"
    logbackVersion = "1.2.3"
    sentryVersion = "4.3.0"
    prometheusClientVersion = "0.10.0"
    reactorRabbitVersion = "1.5.2"
    reactorKotlinVersion = "1.1.3"
    coroutinesVersion = "1.4.3"
    reflectionsVersion = "0.9.12"
    jsonVersion = "20210307"
    snakeYamlVersion = "1.28"

    //testing deps
    junitVersion = "5.7.1"
    apiGuardianVersion = "1.0.0"
    dockerComposeRuleVersion = "1.5.0"
    mockitoVersion = "3.9.0"
}

wrapper {
    gradleVersion = "4.8.1"
    //noinspection UnnecessaryQualifiedReference
    distributionType = Wrapper.DistributionType.ALL
}

//create a simple version file that we will be reading to create appropriate docker tags
void versionTxt() {
    new File("$projectDir/VERSION.txt").text = "$rootProject.version\n"
}

versionTxt()

//publishToMavenLocal.dependsOn jar

/*
// called by jitpack
task install {
    dependsOn build
    dependsOn publishToMavenLocal
    doLast {
        println 'Version: ' + version
    }
}*/
